{"version":3,"sources":["assets/img/tilak.png","components/chat/Stopwatch.js","components/chat/chatlist.js","../node_modules/reactstrap/es/Col.js"],"names":["module","exports","Stopwatch","_useState","useState","_useState2","_slicedToArray","time","setTime","_useState3","_useState4","running","setRunning","useEffect","interval","setInterval","prevTime","clearInterval","React","createElement","className","Math","floor","slice","onClick","ChatList","_React$Component","props","_this","_classCallCheck","componentDidMount","astroid","JSON","parse","localStorage","getItem","axiosConfig","get","concat","then","response","_response$data","_response$data$data","_response$data2","_response$data2$data","console","log","data","setState","_defineProperty","fullname","all_skills","language","img","status","_id","catch","error","submitHandler","e","userId","roomid","preventDefault","id","match","params","user_id","obj","astroId","roomId","userid","msg","state","post","_response$data3","_response$data3$data","_response$data4","_response$data4$data","_response$data5","_response$data5$data","_response$data6","_response$data6$data","undefined","_response$data7","chatMsgList","swal","handleChange","target","value","_inherits","_createClass","key","_this$state","_this2","this","LayoutOne","headerTop","style","backgroundColor","width","padding","backgroundSize","Container","Row","Col","md","src","alt","length","map","chatMsg","index","msg_reply","class","aria-hidden","name","placeholder","onChange","defaultValue","Component","_excluded","stringOrNumberProp","oneOfType","number","string","columnProps","bool","shape","size","order","offset","propTypes","tag","xs","sm","lg","xl","cssModule","object","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Tag","attributes","colClasses","forEach","i","columnProp","_classNames","colSizeInterfix","colClass","push","_colClass","classes"],"mappings":"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","file":"static/js/127.938ac9af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tilak.7908f7b9.png\";","import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\n// import {Container,Row,Col} from 'reactstrap'\r\n// import tilak from '../../assets/img/tilak.png'\r\nimport '../../assets/scss/chat.scss'\r\n// import LayoutOne from '../../layouts/LayoutOne'\r\n import { useState,  useEffect} from 'react'\r\n// import swal from 'sweetalert'\r\n// import axiosConfig from '../../axiosConfig'\r\n\r\n\r\nconst Stopwatch = () => {\r\n    const [time, setTime] = useState(0);\r\n    const [running, setRunning] = useState(false);\r\n    useEffect(() => {\r\n      let interval;\r\n      if (running) {\r\n        interval = setInterval(() => {\r\n          setTime((prevTime) => prevTime + 10);\r\n        }, 10);\r\n      } else if (!running) {\r\n        clearInterval(interval);\r\n      }\r\n      return () => clearInterval(interval);\r\n    }, [running]);\r\n    return (\r\n      <div className=\"stopwatch\">\r\n        <div className=\"numbers\">\r\n          <span>{(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}:</span>\r\n          <span>{(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}:</span>\r\n          <span>{(\"0\" + ((time / 10) % 100)).slice(-2)}</span>\r\n        </div>\r\n        <div className=\"buttons\">\r\n          <button onClick={() => setRunning(true)}>Start</button>\r\n          <button onClick={() => setRunning(false)}>Stop</button>\r\n          <button onClick={() => setTime(0)}>Reset</button>       \r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  export default Stopwatch;","import React from \"react\";\r\nimport Stopwatch from \"./Stopwatch\";\r\n// import { Link } from 'react-router-dom'\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport tilak from \"../../assets/img/tilak.png\";\r\nimport \"../../assets/scss/chat.scss\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\n// import { useState } from 'react'\r\nimport swal from \"sweetalert\";\r\nimport axiosConfig from \"../../axiosConfig\";\r\nclass ChatList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      astroid: \"\",\r\n      msg: \"\",\r\n      chatMsgList: [],\r\n      userId: \"\",\r\n      roomid: \"\",\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    let astroid = JSON.parse(localStorage.getItem(\"astroId\"));\r\n\r\n    // console.log(id);\r\n    axiosConfig\r\n      .get(`/admin/getoneAstro/${astroid}`)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          fullname: response.data.data.fullname,\r\n          all_skills: response.data.data.all_skills,\r\n          language: response.data.data.language,\r\n          img: response.data.data.img[0],\r\n          status: response.data.status,\r\n          // Exp: response.data.data.Exp,\r\n          // exp_in_years: response.data.data.exp_in_years,\r\n          // callCharge: response.data.data.callCharge,\r\n          // long_bio: response.data.data.long_bio,\r\n          // msg: response.data.data.msg,\r\n          // astroMobile: response?.data?.data?.mobile,\r\n          status: response?.data?.data?.status,\r\n          astroId: response?.data?.data?._id,\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  submitHandler = (e, astroid, userId, roomid) => {\r\n    e.preventDefault();\r\n    let { id } = this.props.match.params;\r\n    let user_id = JSON.parse(localStorage.getItem(\"user_id\"));\r\n    let obj = {\r\n      astroId: id,\r\n      astroid: astroid,\r\n      roomId: id,\r\n      roomid: roomid,\r\n      userid: user_id,\r\n      msg: this.state.msg,\r\n    };\r\n\r\n    axiosConfig\r\n      .post(`/user/addchat/${user_id}`, obj)\r\n      .then(response => {\r\n        console.log(\"@@@@@\", response?.data?.data?.roomid);\r\n        this.setState({ msg: \"\" });\r\n        this.setState({ roomid: response?.data?.data?.roomid });\r\n        if (response?.data?.data?.roomid !== undefined) {\r\n          axiosConfig\r\n            .get(`/user/allchatwithuser/` + response?.data?.data?.roomid)\r\n            .then(response => {\r\n              console.log(\"ROOMID\", response.data.data);\r\n              this.setState({\r\n                msg: \"\",\r\n                chatMsgList: response?.data?.data,\r\n              });\r\n            })\r\n            .catch(error => {\r\n              console.log(error);\r\n            });\r\n        }\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        //window.location.reload('/askQuestion')\r\n      })\r\n      .catch(error => {\r\n        swal(\"Error!\", \"You clicked the button!\", \"error\");\r\n        console.log(error);\r\n      });\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      msg: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { chatMsgList } = this.state;\r\n    return (\r\n      <LayoutOne headerTop=\"visible\">\r\n        <section className=\"pt-0 pb-0\">\r\n          <div\r\n            className=\"\"\r\n            style={{\r\n              backgroundColor: \"#FFD59E\",\r\n              width: \"100%\",\r\n              padding: \"70px 0px\",\r\n              backgroundSize: \"cover\",\r\n            }}\r\n          >\r\n            <Container>\r\n              <Row>\r\n                <Col md=\"12\">\r\n                  <div className=\"leftcont text-left\">\r\n                    <h1>Chat With Best Astrologers</h1>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        </section>\r\n        <section>\r\n          <Container>\r\n            <div className=\"\">\r\n              <div className=\"\">\r\n                <div className=\"col-md-12 col-xl-12 chat\">\r\n                  <div\r\n                    className=\"card cardchat\"\r\n                    style={{\r\n                      backgroundColor: \"#f0f0f0\",\r\n                      width: \"100%\",\r\n                    }}\r\n                  >\r\n                    <div className=\"card-header msg_head\">\r\n                      <div className=\"d-flex \">\r\n                        <div className=\"img_cont\">\r\n                          <img\r\n                            src={this.state?.img}\r\n                            alt=\"\"\r\n                            className=\"rounded-circle user_st\"\r\n                          />\r\n\r\n                          {/* <img\r\n                            className=\"rounded-circle user_st\"\r\n                            src={tilak}\r\n                            alt=\"userpic\"\r\n                          /> */}\r\n                          <span className=\"online_icon\" />\r\n                        </div>\r\n                        <div className=\"user_info\">\r\n                          <span>Tilak</span>\r\n                          <Stopwatch />\r\n                          <p>typing....</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      {chatMsgList.length > 0\r\n                        ? chatMsgList.map((chatMsg, index) => {\r\n                            return (\r\n                              <div>\r\n                                <div className=\"card-body msg_card_body\">\r\n                                  <div className=\"d-flex justify-content-start mb-4\">\r\n                                    <div className=\"msg_cotainer\">\r\n                                      {chatMsg.msg_reply}\r\n                                      <span className=\"msg_time\">\r\n                                        8:40 AM, Today\r\n                                      </span>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"card-body msg_card_body\">\r\n                                  <div className=\"d-flex justify-content-end mb-4\">\r\n                                    <div className=\"msg_cotainer_send\">\r\n                                      {chatMsg.msg}\r\n                                      <span className=\"msg_time_send\">\r\n                                        8:55 AM, Today\r\n                                      </span>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            );\r\n                          })\r\n                        : \"\"}\r\n                    </div>\r\n                    <div className=\"card-footer\">\r\n                      <div className=\"input-group\">\r\n                        <div className=\"input-group-append\">\r\n                          <span className=\"input-group-text attach_btn\">\r\n                            <i class=\"fa fa-paperclip\" aria-hidden=\"true\"></i>\r\n                          </span>\r\n                        </div>\r\n                        <textarea\r\n                          name\r\n                          className=\"form-control type_msg\"\r\n                          placeholder=\"Type your message...\"\r\n                          onChange={e => {\r\n                            this.handleChange(e);\r\n                          }}\r\n                          value={this.state.msg}\r\n                          defaultValue={\"\"}\r\n                        />\r\n                        <div className=\"input-group-append\">\r\n                          <span\r\n                            className=\"input-group-text send_btn\"\r\n                            onClick={e =>\r\n                              this.submitHandler(\r\n                                e,\r\n                                this.state.astroId,\r\n                                this.state.userId,\r\n                                this.state.roomid\r\n                              )\r\n                            }\r\n                          >\r\n                            <i\r\n                              class=\"fa fa-location-arrow\"\r\n                              aria-hidden=\"true\"\r\n                            ></i>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Container>\r\n        </section>\r\n      </LayoutOne>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatList;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"widths\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\nvar Col = function Col(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    widths = props.widths,\n    Tag = props.tag,\n    attributes = _objectWithoutPropertiesLoose(props, _excluded);\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n    var isXs = !i;\n    if (isObject(columnProp)) {\n      var _classNames;\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(_colClass);\n    }\n  });\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;"],"sourceRoot":""}