{"version":3,"sources":["pages/shop/ShopListTwoColumn.js"],"names":["connect","state","products","productData","_ref","location","_useState","useState","_useState2","_slicedToArray","layout","setLayout","_useState3","_useState4","sortType","setSortType","_useState5","_useState6","sortValue","setSortValue","_useState7","_useState8","filterSortType","setFilterSortType","_useState9","_useState10","filterSortValue","setFilterSortValue","_useState11","_useState12","offset","setOffset","_useState13","_useState14","currentPage","setCurrentPage","_useState15","_useState16","currentData","setCurrentData","_useState17","_useState18","sortedProducts","setSortedProducts","pathname","useEffect","getSortedProducts","filterSortedProducts","slice","React","createElement","Fragment","MetaTags","name","content","BreadcrumbsItem","to","process","LayoutOne","headerTop","Breadcrumb","className","ShopTopbarFilter","getLayout","getFilterSortParams","productCount","length","sortedProductCount","getSortParams","ShopProducts","Paginator","totalRecords","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText"],"mappings":"iPA0HeA,6BANS,SAAAC,GACtB,MAAO,CACLC,SAAUD,EAAME,YAAYD,YAIjBF,EA9GW,SAAHI,GAAgC,IAA1BC,EAAQD,EAARC,SAAUH,EAAQE,EAARF,SACrCI,EAA4BC,mBAAS,mBAAkBC,EAAAC,YAAAH,EAAA,GAAhDI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,EAAgCL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,EAAkCT,mBAAS,IAAGU,EAAAR,YAAAO,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,EAA4Cb,mBAAS,IAAGc,EAAAZ,YAAAW,EAAA,GAAjDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,EAA8CjB,mBAAS,IAAGkB,EAAAhB,YAAAe,EAAA,GAAnDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAC1CG,EAA4BrB,mBAAS,GAAEsB,EAAApB,YAAAmB,EAAA,GAAhCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,EAAsCzB,mBAAS,GAAE0B,EAAAxB,YAAAuB,EAAA,GAA1CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,EAAsC7B,mBAAS,IAAG8B,EAAA5B,YAAA2B,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,EAA4CjC,mBAAS,IAAGkC,EAAAhC,YAAA+B,EAAA,GAAjDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAGhCG,EAAavC,EAAbuC,SA4BR,OAZAC,qBAAU,WACR,IAAIH,EAAiBI,YAAkB5C,EAAUY,EAAUI,GACrD6B,EAAuBD,YAC3BJ,EACApB,EACAI,GAGFiB,EADAD,EAAiBK,GAEjBR,EAAeG,EAAeM,MAAMlB,EAAQA,EA1B5B,OA2Bf,CAACA,EAAQ5B,EAAUY,EAAUI,EAAWI,EAAgBI,IAGzDuB,IAAAC,cAACC,WAAQ,KACPF,IAAAC,cAACE,IAAQ,KACPH,IAAAC,cAAA,aAAO,qBACPD,IAAAC,cAAA,QACEG,KAAK,cACLC,QAAQ,6DAIZL,IAAAC,cAACK,kBAAe,CAACC,GAA6B,KAAK,QACnDP,IAAAC,cAACK,kBAAe,CAACC,GAAIC,GAAyBb,GAAU,QAIxDK,IAAAC,cAACQ,IAAS,CAACC,UAAU,WAEnBV,IAAAC,cAACU,IAAU,MAEXX,IAAAC,cAAA,OAAKW,UAAU,0BACbZ,IAAAC,cAAA,OAAKW,UAAU,mBACbZ,IAAAC,cAAA,OAAKW,UAAU,OACbZ,IAAAC,cAAA,OAAKW,UAAU,aAEbZ,IAAAC,cAACY,IAAgB,CACfC,UAnDE,SAAArD,GAChBC,EAAUD,IAmDIsD,oBA3CY,SAAClD,EAAUI,GACrCK,EAAkBT,GAClBa,EAAmBT,IA0CL+C,aAAc/D,EAASgE,OACvBC,mBAAoB7B,EAAY4B,OAChChE,SAAUA,EACVkE,cApDM,SAACtD,EAAUI,GAC/BH,EAAYD,GACZK,EAAaD,MAsDD+B,IAAAC,cAACmB,IAAY,CAAC3D,OAAQA,EAAQR,SAAUoC,IAGxCW,IAAAC,cAAA,OAAKW,UAAU,0CACbZ,IAAAC,cAACoB,IAAS,CACRC,aAAc7B,EAAewB,OAC7BM,UArEA,GAsEAC,eAAgB,EAChB1C,UAAWA,EACXG,YAAaA,EACbC,eAAgBA,EAChBuC,mBAAmB,YACnBC,aAAa,OACbC,aAAa","file":"static/js/196.fd4d9f62.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport MetaTags from \"react-meta-tags\";\r\nimport Paginator from \"react-hooks-paginator\";\r\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\r\nimport { connect } from \"react-redux\";\r\nimport { getSortedProducts } from \"../../helpers/product\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport ShopTopbarFilter from \"../../wrappers/product/ShopTopbarFilter\";\r\nimport ShopProducts from \"../../wrappers/product/ShopProducts\";\r\n\r\nconst ShopListTwoColumn = ({ location, products }) => {\r\n  const [layout, setLayout] = useState(\"list two-column\");\r\n  const [sortType, setSortType] = useState(\"\");\r\n  const [sortValue, setSortValue] = useState(\"\");\r\n  const [filterSortType, setFilterSortType] = useState(\"\");\r\n  const [filterSortValue, setFilterSortValue] = useState(\"\");\r\n  const [offset, setOffset] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentData, setCurrentData] = useState([]);\r\n  const [sortedProducts, setSortedProducts] = useState([]);\r\n\r\n  const pageLimit = 16;\r\n  const { pathname } = location;\r\n\r\n  const getLayout = layout => {\r\n    setLayout(layout);\r\n  };\r\n\r\n  const getSortParams = (sortType, sortValue) => {\r\n    setSortType(sortType);\r\n    setSortValue(sortValue);\r\n  };\r\n\r\n  const getFilterSortParams = (sortType, sortValue) => {\r\n    setFilterSortType(sortType);\r\n    setFilterSortValue(sortValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let sortedProducts = getSortedProducts(products, sortType, sortValue);\r\n    const filterSortedProducts = getSortedProducts(\r\n      sortedProducts,\r\n      filterSortType,\r\n      filterSortValue\r\n    );\r\n    sortedProducts = filterSortedProducts;\r\n    setSortedProducts(sortedProducts);\r\n    setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\r\n  }, [offset, products, sortType, sortValue, filterSortType, filterSortValue]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaTags>\r\n        <title>Flone | Shop Page</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Shop page of flone react minimalist eCommerce template.\"\r\n        />\r\n      </MetaTags>\r\n\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>Home</BreadcrumbsItem>\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\r\n        Shop\r\n      </BreadcrumbsItem>\r\n\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb />\r\n\r\n        <div className=\"shop-area pt-95 pb-100\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                {/* shop topbar filter */}\r\n                <ShopTopbarFilter\r\n                  getLayout={getLayout}\r\n                  getFilterSortParams={getFilterSortParams}\r\n                  productCount={products.length}\r\n                  sortedProductCount={currentData.length}\r\n                  products={products}\r\n                  getSortParams={getSortParams}\r\n                />\r\n\r\n                {/* shop page content default */}\r\n                <ShopProducts layout={layout} products={currentData} />\r\n\r\n                {/* shop product pagination */}\r\n                <div className=\"pro-pagination-style text-center mt-30\">\r\n                  <Paginator\r\n                    totalRecords={sortedProducts.length}\r\n                    pageLimit={pageLimit}\r\n                    pageNeighbours={2}\r\n                    setOffset={setOffset}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    pageContainerClass=\"mb-0 mt-0\"\r\n                    pagePrevText=\"«\"\r\n                    pageNextText=\"»\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShopListTwoColumn.propTypes = {\r\n  location: PropTypes.object,\r\n  products: PropTypes.array\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.productData.products\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ShopListTwoColumn);\r\n"],"sourceRoot":""}