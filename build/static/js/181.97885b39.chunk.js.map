{"version":3,"sources":["wrappers/breadcrumb/Breadcrumb.js","pages/other/Otp.js"],"names":["Breadcrumb","React","createElement","className","Breadcrumbs","separator","item","NavLink","finalItem","Verify_otp","_React$Component","_this","_classCallCheck","state","otp","resenddd","setState","interval","sendOtp","customer_email","mobile","msg","input","errors","handleChange","handleSubmit","bind","_assertThisInitialized","_inherits","_createClass","key","value","this","seconds","evt","_defineProperty","target","name","event","preventDefault","axiosConfig","post","then","res","console","log","alert","catch","error","response","Fragment","MetaTags","content","LayoutOne","headerTop","Tab","Container","defaultActiveKey","Content","Pane","eventKey","onSubmit","OtpInput","onChange","numInputs","type","OTPError","Component"],"mappings":"oHAAA,oCAoBeA,IAhBI,WACjB,OACEC,IAAAC,cAAA,OAAKC,UAAU,yCACbF,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,OAAKC,UAAU,kCACbF,IAAAC,cAACE,cAAW,CACVC,UAAWJ,IAAAC,cAAA,YAAM,KACjBI,KAAMC,IACNC,UAAW,c,mPCCvB,IACqBC,EAAU,SAAAC,GAE7B,SAAAD,IAAe,IAADE,E,MAkBqC,OAlBrCC,YAAA,KAAAH,G,EACZ,K,EAAAA,E,kBAAAE,E,iGAFFE,MAAQ,CAAEC,IAAK,IAAIH,EAsBnBI,SAAW,WACTJ,EAAKK,SAAS,CAAEF,IAAK,KACrBH,EAAKM,WACLN,EAAKO,WAtBLP,EAAKE,MAAQ,CACXM,eAAgB,GAEhBC,OAAQ,GACRN,IAAK,SACLO,IAAK,GAILC,MAAO,GACPC,OAAQ,IAKVZ,EAAKa,aAAe,SAAAV,GAAG,OAAIH,EAAKK,SAAS,CAAEF,SAC3CH,EAAKc,aAAed,EAAKc,aAAaC,KAAIC,YAAAhB,IAAOA,EAgIlD,OApJ4BiB,YAAAnB,EAAAC,GAqB5BmB,YAAApB,EAAA,EAAAqB,IAAA,WAAAC,MAOD,WACEC,KAAKhB,SAAS,CAAEiB,QAAS,OAS1B,CAAAH,IAAA,eAAAC,MACD,SAAaG,GAEXF,KAAKhB,SAAQmB,YAAC,GAAGD,EAAIE,OAAOC,KAAOH,EAAIE,OAAOL,UAC/C,CAAAD,IAAA,eAAAC,MAED,SAAaO,GACXA,EAAMC,iBASNC,IACGC,KAAK,kBAAmBT,KAAKnB,OAE7B6B,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZG,MAAM,aAEPC,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,EAAMC,eAEvB,CAAAnB,IAAA,SAAAC,MAED,WACE,OACE9B,IAAAC,cAACgD,WAAQ,KACPjD,IAAAC,cAACiD,IAAQ,KACPlD,IAAAC,cAAA,aAAO,sBACPD,IAAAC,cAAA,QACEmC,KAAK,cACLe,QAAQ,gEAQZnD,IAAAC,cAACmD,IAAS,CAACC,UAAU,WAEnBrD,IAAAC,cAACF,IAAU,MACXC,IAAAC,cAAA,OAAKC,UAAU,qCACbF,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,OAAKC,UAAU,sCACbF,IAAAC,cAAA,OAAKC,UAAU,0BACbF,IAAAC,cAACqD,IAAIC,UAAS,CAACC,iBAAiB,SAC9BxD,IAAAC,cAACqD,IAAIG,QAAO,KACVzD,IAAAC,cAACqD,IAAII,KAAI,CAACC,SAAS,SACjB3D,IAAAC,cAAA,OAAKC,UAAU,wBACbF,IAAAC,cAAA,OAAKC,UAAU,uBACbF,IAAAC,cAAA,QAAM2D,SAAU7B,KAAKP,cACnBxB,IAAAC,cAAA,WACED,IAAAC,cAAC4D,IAAQ,CACP/B,MAAOC,KAAKnB,MAAMC,IAClBiD,SAAU/B,KAAKR,aACfwC,UAAW,EACXC,KAAK,SACL5B,KAAK,MACLhC,UAAWJ,IAAAC,cAAA,eAEZ8B,KAAKnB,MAAMqD,SACRlC,KAAKnB,MAAMqD,SACX,MAiBNjE,IAAAC,cAAA,OAAKC,UAAU,cAQbF,IAAAC,cAAA,UAAQ+D,KAAK,QAAO,QACpBhE,IAAAC,cAAA,UAAQ+D,KAAK,UAAS,6BAgBrDxD,EApJ4B,CAASR,IAAMkE","file":"static/js/181.97885b39.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Breadcrumbs } from \"react-breadcrumbs-dynamic\";\r\n\r\nconst Breadcrumb = () => {\r\n  return (\r\n    <div className=\"breadcrumb-area pt-10 pb-10 bg-gray-5\">\r\n      <div className=\"container\">\r\n        <div className=\"breadcrumb-content text-center\">\r\n          <Breadcrumbs\r\n            separator={<span>/</span>}\r\n            item={NavLink}\r\n            finalItem={\"span\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import React, { Fragment } from \"react\";\r\nimport MetaTags from \"react-meta-tags\";\r\nimport OtpInput from \"react-otp-input\";\r\nimport axiosConfig from \"../../axiosConfig\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\n// import Nav from \"react-bootstrap/Nav\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\n\r\n// const Phone = ({ location }) => {\r\n//   const { pathname } = location;\r\n// function Otp(props) {\r\nexport default class Verify_otp extends React.Component {\r\n  state = { otp: \"\" };\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      customer_email: \"\",\r\n      // visible : false,\r\n      mobile: \"\",\r\n      otp: \"123456\",\r\n      msg: \"\",\r\n\r\n      //   \"status\": true,\r\n\r\n      input: {},\r\n      errors: {},\r\n    };\r\n    //     this.handleChange = otp => this.setState({ otp });\r\n    //     this.handleChange = this.handleChange.bind(this);\r\n    // this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = otp => this.setState({ otp });\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  resenddd = () => {\r\n    this.setState({ otp: \"\" });\r\n    this.interval();\r\n    this.sendOtp();\r\n  };\r\n  interval() {\r\n    this.setState({ seconds: 26 });\r\n\r\n    // let myInterval = setInterval(() => {\r\n    //     if (this.state.seconds == 0) {\r\n    //         clearInterval(myInterval);\r\n    //     } else {\r\n    //         this.setState({ seconds: this.state.seconds - 1 });\r\n    //     }\r\n    // }, 1000)\r\n  }\r\n  handleChange(evt) {\r\n    // const value=evt.target.value;\r\n    this.setState({ [evt.target.name]: evt.target.value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    // this.otpIntegration()\r\n\r\n    // handleverifyotp=()=>{\r\n    //   const sendData = {\r\n    //     customer_email:localStorage.getItem('customer_email'),\r\n    //     status: this.state.status,\r\n    //   };\r\n\r\n    axiosConfig\r\n      .post(\"/user/verifyotp\", this.state)\r\n\r\n      .then(res => {\r\n        console.log(res);\r\n        alert(\"anjali\");\r\n      })\r\n      .catch(error => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <MetaTags>\r\n          <title>Astrogyata | Login</title>\r\n          <meta\r\n            name=\"description\"\r\n            content=\"Compare page of flone react minimalist eCommerce template.\"\r\n          />\r\n        </MetaTags>\r\n        {/* <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>Home</BreadcrumbsItem> */}\r\n        {/* <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}> */}\r\n        {/* <BreadcrumbsItem>\r\n        Login Register\r\n      </BreadcrumbsItem> */}\r\n        <LayoutOne headerTop=\"visible\">\r\n          {/* breadcrumb */}\r\n          <Breadcrumb />\r\n          <div className=\"login-register-area pt-100 pb-100\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-7 col-md-12 ml-auto mr-auto\">\r\n                  <div className=\"login-register-wrapper\">\r\n                    <Tab.Container defaultActiveKey=\"login\">\r\n                      <Tab.Content>\r\n                        <Tab.Pane eventKey=\"login\">\r\n                          <div className=\"login-form-container\">\r\n                            <div className=\"login-register-form\">\r\n                              <form onSubmit={this.handleSubmit}>\r\n                                <div>\r\n                                  <OtpInput\r\n                                    value={this.state.otp}\r\n                                    onChange={this.handleChange}\r\n                                    numInputs={4}\r\n                                    type=\"number\"\r\n                                    name=\"otp\"\r\n                                    separator={<span></span>}\r\n                                  />\r\n                                  {this.state.OTPError\r\n                                    ? this.state.OTPError\r\n                                    : null}\r\n                                </div>\r\n\r\n                                {/* <input\r\n                               onChange={this.changeHandler}\r\n                                type=\"number\"\r\n                                name=\"mobile \"\r\n                                placeholder=\"Enter your OTP\"\r\n                              /> */}\r\n\r\n                                {/* <input\r\n                               onChange={this.changeHandler}\r\n                                type=\"number\"\r\n                                name=\"otp \"\r\n                                placeholder=\"Enter your OTP\"\r\n                              /> */}\r\n\r\n                                <div className=\"button-box\">\r\n                                  {/* <div className=\"login-toggle-btn\">\r\n                                  <input type=\"checkbox\" />\r\n                                  <label className=\"ml-10\">Remember me</label>\r\n                                  <Link to={process.env.PUBLIC_URL + \"/\"}>\r\n                                    Forgot Password?\r\n                                  </Link>\r\n                                </div> */}\r\n                                  <button type=\"back\">Back</button>\r\n                                  <button type=\"submit\">SendOTP</button>\r\n                                </div>\r\n                              </form>\r\n                            </div>\r\n                          </div>\r\n                        </Tab.Pane>\r\n                      </Tab.Content>\r\n                    </Tab.Container>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </LayoutOne>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}